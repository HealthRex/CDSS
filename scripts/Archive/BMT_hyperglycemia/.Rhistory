getwd()
help.start()
library(dplyr)
install.packages('dplyr')
library(dplyr)
library(bigrquery)
install.packages('bigrquery')
project <- "mining-clinical-decisions"
testquery <- "SELECT
ADT.pat_enc_csn_id_coded
FROM
starr_datalake2018.adt AS ADT JOIN  -- Create a shorthand table alias for convenience when referencing
starr_datalake2018.treatment_team AS TT ON ADT.pat_enc_csn_id_coded = TT.pat_enc_csn_id_coded
LIMIT 1000"
testquery
data <- download_bq(project,testquery)
library(bigrquery)
data <- download_bq(project,testquery)
#download_bq <- function(project, sql){
tb <- bq_project_query(project, testquery)
tb.dtx <- bq_table_download(tb)
tb.dtx
sql <- "
select
opCT.jc_uid,
cast(opCT.pat_enc_csn_id_coded as string) as string_id,
admit.event_type,
admit.pat_class,
admit.effective_time_jittered as emergencyAdmitTime,
min(opCT.order_inst_jittered) as ctHeadOrderTime,
dc.dx_name,
dc.icd10
from
datalake_47618.adt as admit,
datalake_47618.order_proc as opCT,
datalake_47618.diagnosis_code as dc
where admit.event_type_c = 1 -- Admission
and admit.pat_class_c = '112' -- Emergency Services
and TIMESTAMP_ADD(TIMESTAMP(admit.effective_time_jittered), INTERVAL -60 MINUTE) < TIMESTAMP(opCT.order_inst_jittered)
and TIMESTAMP_ADD(TIMESTAMP(admit.effective_time_jittered), INTERVAL 60 MINUTE) >= TIMESTAMP(opCT.order_inst_jittered)
and opCT.proc_code like 'IMGCTH%' -- CT Head orders
and admit.pat_enc_csn_id_coded = opCT.pat_enc_csn_id_coded
and dc.pat_enc_csn_id_coded = admit.pat_enc_csn_id_coded
and dc.pat_enc_csn_id_coded = opCT.pat_enc_csn_id_coded
group by
opCT.jc_uid,
opCT.pat_enc_csn_id_coded,
admit.event_type,
admit.pat_class,
admit.effective_time_jittered,
dc.dx_name,
dc.icd10
"
#download_bq <- function(project, sql){
tb <- bq_project_query(project, sql)
tb.dtx <- bq_table_download(tb)
tb.dtx
View(tb.dtx)
download_bq <- function(project, sql){
tb <- bq_project_query(project, sql)
tb.dtx <- bq_table_download(tb)
return(tb.dtx)
}
getwd()
rdir <- '/Users/Ivana/Documents/Fellowship/Chen Lab/GitHub/CDSS/scripts/BMT_hyperglycemia'
setwd(rdir)
pwd()
getwd()
sql <- read('BMT_primary_TT.sql')
sql <- read_file('BMT_primary_TT.sql')
install.packages('readr')
library(readr)
sql <- read_file('BMT_primary_TT.sql')
download_bq <- function(project, sql){
tb <- bq_project_query(project, sql)
tb.dtx <- bq_table_download(tb)
return(tb.dtx)
}
data <- download_bq(project,sql)
View(data)
rdir_files <- list.files()
rdir_files
sql <- read_file('BMT_and_DM_distinct.sql" )
download_bq <- function(project, sql){
tb <- bq_project_query(project, sql)
tb.dtx <- bq_table_download(tb)
return(tb.dtx)
}
data <- download_bq(project,sql)
sql <- read_file('BMT_and_DM_distinct.sql')
data <- download_bq(project,sql)
sql
test <- "SELECT count (DISTINCT(jc_uid)) from `starr_datalake2018.diagnosis_code`
WHERE jc_uid IN (SELECT (jc_uid) from `starr_datalake2018.diagnosis_code`
WHERE UPPER(dx_name) LIKE '%BONE MARROW%' AND UPPER(dx_name) LIKE '%TRANSPLANT%')
AND UPPER(dx_name) LIKE '%DIABETES%â€™"
data <- download_bq(project,test)
test <- "SELECT count (DISTINCT(jc_uid)) from `starr_datalake2018.diagnosis_code`
WHERE jc_uid IN (SELECT (jc_uid) from `starr_datalake2018.diagnosis_code`
WHERE UPPER(dx_name) LIKE '%BONE MARROW%' AND UPPER(dx_name) LIKE '%TRANSPLANT%')
AND UPPER(dx_name) LIKE '%DIABETES%'"
data <- download_bq(project,test)
View(data)
