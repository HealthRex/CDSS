Query 1: Create a new table at njr_labutil.lab_result_inpt that has a unique identifier column so that each lab_result row has a unique identifier called uid
The results are saved to njr_labutil.lab_result_inpt

SELECT ROW_NUMBER() OVER(ORDER BY order_time ASC) AS uid, *
FROM `mining-clinical-decisions.lpch_core.lab_result`
WHERE ordering_mode='Inpatient'
--saved as njr_labutil.lab_result_inpt, includes unique ID column 'uid'



Query 2: Join uid and encounter ID from the lab_result_inpt table with the nearest preceding row in adt using only the effective_time_jittered and pat_enc_csn_id_coded and seq_num_in_enc columns. In order to acehive this, we first join lab_result_inpt with adt table using the columns above, then sort by effective_time_jittered desc and seq_num_in_enc desc and then group by uid and select the most recent row as long as the adt event time is before the order time.
The results are saved to njr_labutil.ued_time_enc

WITH lr as (
    SELECT * FROM njr_labutil.lab_result_inpt
), 
lradt as (
    SELECT uid, lr.pat_enc_csn_id_coded, order_time, effective_time_jittered, seq_num_in_enc from lr
    LEFT JOIN `mining-clinical-decisions.lpch_core.adt` as adt
    ON lr.pat_enc_csn_id_coded = adt.pat_enc_csn_id_coded
    ORDER BY lr.uid asc, adt.effective_time_jittered desc, adt.SEQ_NUM_IN_ENC desc
)
SELECT uid, MAX(lradt.pat_enc_csn_id_coded) as pat_enc_csn_id_coded, MAX(effective_time_jittered) as effective_time_jittered, MAX(seq_num_in_enc) as seq_num_in_enc
FROM lradt
WHERE lradt.order_time >= lradt.effective_time_jittered
GROUP BY uid

What happens here is that there are _ dropped lab_results:
- 1,811,809 of the results do not have a corresponding encounter in adt
-   317,807 of the results do not have an adt event that occurs before the lab_result is ordered



Query 3: the ued_time_enc, and the full lab_result_inpt tables are joined together:
Result is saved to njr_labutil.lab_result_inpt_uet_join

SELECT *
FROM `mining-clinical-decisions.njr_labutil.lab_result_inpt` as lri
LEFT JOIN `mining-clinical-decisions.njr_labutil.uet_enc_time` as uet
ON lri.uid = uet.uid
ORDER BY effective_time_jittered asc



Query 4: the lab_result_inpt_uet_join is joined with adt using the event time and num_seq_in_enc. Select columns selected.
Result is saved in njr_labutil.lradt

SELECT uid, lr.anon_id, lr.pat_enc_csn_id_coded, order_id_coded, component_id, order_type, proc_code,
    group_lab_name, lab_name, base_name, ord_num_value, reference_low, reference_high, reference_unit,
    result_in_range_yn, result_flag, order_time, result_time, lr.effective_time_jittered,
    pat_class, department_id, pat_service, pat_lv_of_care, accomodation, from_base_class, to_base_class, in_event_type, out_event_type, 
    event_id_coded, event_type
FROM `mining-clinical-decisions.njr_labutil.lab_result_inpt_uet_join` as lr
JOIN `mining-clinical-decisions.lpch_core.adt` as adt
ON lr.pat_enc_csn_id_coded = adt.PAT_ENC_CSN_ID_CODED
    AND lr.effective_time_jittered = adt.EFFECTIVE_TIME_JITTERED
    AND lr.seq_num_in_enc = adt.SEQ_NUM_IN_ENC
WHERE lr.pat_enc_csn_id_coded_1 IS NOT NULL
ORDER BY lr.pat_enc_csn_id_coded asc